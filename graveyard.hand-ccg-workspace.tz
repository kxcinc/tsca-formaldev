{ parameter (pair (bytes :genparam) (mutez :totbal));
  storage (unit);
  code
    { DROP;

      LAMBDA
        (pair bytes mutez)
        (list
           (pair (pair string (lambda (pair bytes bytes) (pair (list operation) bytes)))
                 (pair bytes mutez)))
        {
          { DUP ; CAR ; DIP 1 { CDR } };
          LAMBDA
            (pair (bytes :wparam)  (bytes :wstorage))
            (pair (list operation) bytes)
            { DUP; CAR; UNPACK unit;
              IF_NONE
                { PUSH string "unpack param"; FAILWITH }
                { DROP };
              CDR;
              NIL operation;
              PAIR; }
            ;
          PUSH @rclabel string "main";
          PAIR;
          DIP { PAIR };
          PAIR;
          DIP { NIL
                  (pair
                     (pair string (lambda (pair bytes bytes) (pair (list operation) bytes)))
                     (pair bytes mutez)) };
          CONS;

        };


      LAMBDA
        (pair bytes mutez)
        (lambda (map string address) (list (pair string bytes)))

        { DROP 1 ;
          LAMBDA
            (map string address)
            (list (pair string bytes))
            { DROP 1 ; NIL (pair string bytes) } };


      DROP; DROP;
      UNIT;
      NIL operation;
      PAIR;
    }
}
